/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/db": {
    get: operations["getDatabases"];
    post: operations["createDatabase"];
  };
  "/db/{databaseName}": {
    delete: operations["deleteDatabase"];
  };
  "/db/upload": {
    post: operations["uploadDatabase"];
  };
}

export interface components {}

export interface operations {
  getDatabases: {
    responses: {
      /** Get the list of all databases accessible by the authenticated user. */
      200: {
        content: {
          "application/json": {
            /** @example mydb2 */
            name?: string;
          }[];
        };
      };
      /** User is not authenticated. */
      403: {
        content: {
          "application/json": {
            /** @example Access denied. */
            message: string;
          };
        };
      };
    };
  };
  createDatabase: {
    responses: {
      /** New database successfully created. */
      204: never;
      /** Invalid payload in the request. */
      400: {
        content: {
          "application/json": {
            /** @example Invalid parameters for request. */
            message: string;
          };
        };
      };
      403: paths["/db"]["get"]["responses"]["403"];
    };
    requestBody: {
      content: {
        "application/json": {
          /** @example SchemaName */
          scheme: string;
          /** @example mydb2 */
          databaseName: string;
          /** @example Company Inc. */
          companyName?: string;
          /** @example 1234567-US */
          companyCode?: string;
          /**
           * @example en
           * @enum {string}
           */
          language?: "fi" | "en";
          /**
           * @example USD
           * @enum {string}
           */
          currency?: "EUR" | "ZAR" | "USD";
        };
      };
    };
  };
  deleteDatabase: {
    parameters: {
      path: {
        /** Name of the database to delete. */
        databaseName: string;
      };
    };
    responses: {
      /** Database successfully deleted. */
      204: never;
      400: paths["/db"]["post"]["responses"]["400"];
      403: paths["/db"]["get"]["responses"]["403"];
    };
  };
  uploadDatabase: {
    responses: {
      /** New database successfully created. */
      204: never;
      400: paths["/db"]["post"]["responses"]["400"];
      403: paths["/db"]["get"]["responses"]["403"];
      /** Proccessing ended in internal error. */
      500: {
        content: {
          "application/json": {
            /** @example Internal server error. */
            message: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": {
          /** Format: binary */
          file?: string;
        };
      };
    };
  };
}

export interface external {}
